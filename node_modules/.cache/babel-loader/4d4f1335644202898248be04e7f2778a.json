{"ast":null,"code":"var _jsxFileName = \"/Users/ranaraffay/Documents/Fall_2021/my-website-app/src/components/CardStack.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport \"./styles/expandCard.css\";\nimport { Container, Card, Accordion, Button } from \"react-bootstrap\";\nimport { Icon } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainContent = () => {\n  _s();\n\n  // would basically hold the active eventKey to control the active/expanded Accordion\n  const [activeKey, setActiveKey] = useState(\"\"); // we are going to need a ref to the Accordion element to get its position/use the scrollIntoView function\n\n  const accordElem = useRef(null);\n\n  const handleClickEdit = () => {\n    setActiveKey(\"0\"); // \"0\" here is as defined in your Accordion.Collapse eventKey\n\n    accordElem.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\",\n      inline: \"nearest\"\n    }); // initiate scroll to the \"AddMock\" Accordion component\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddMock, {\n      activeKey: activeKey,\n      setActiveKey: setActiveKey,\n      ref: accordElem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"2000px\"\n      },\n      children: \"scroll down to see table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header card-header-info\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title \",\n                children: \"MOCK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Some Header\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 45,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Header 2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 46,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 44,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 43,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: \"Click the Pencil Icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 51,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Icon, {\n                            name: \"pencil\",\n                            size: \"huge\",\n                            style: {\n                              cursor: \"pointer\"\n                            },\n                            onClick: () => handleClickEdit(\"0\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 53,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 52,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 50,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}; // here, ref forwarding is needed to assign a ref to a `div` DOM element\n\n\n_s(MainContent, \"Y0huodgxw0A0EhPZ6pUQJuoC0xg=\");\n\n_c = MainContent;\nconst AddMock = /*#__PURE__*/React.forwardRef(_c2 = (props, ref) => {\n  // optional re-toggling of expanded accordion\n  function handleClickToggle(eventKey) {\n    if (eventKey === props.activeKey) {\n      props.setActiveKey(\"\");\n    } else {\n      props.setActiveKey(eventKey);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      style: {\n        paddingLeft: \"32px\"\n      },\n      activeKey: props.activeKey,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"collapseStyle\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n            as: Button,\n            variant: \"link\",\n            eventKey: \"0\",\n            onClick: () => handleClickToggle(\"0\"),\n            children: \"Add Mock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: \"0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              className: \"mockbody\",\n              children: \"Some Content. Lorem Ipsum. Hello World.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n});\n_c3 = AddMock;\nexport default MainContent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MainContent\");\n$RefreshReg$(_c2, \"AddMock$React.forwardRef\");\n$RefreshReg$(_c3, \"AddMock\");","map":{"version":3,"sources":["/Users/ranaraffay/Documents/Fall_2021/my-website-app/src/components/CardStack.jsx"],"names":["React","useState","useRef","Container","Card","Accordion","Button","Icon","MainContent","activeKey","setActiveKey","accordElem","handleClickEdit","current","scrollIntoView","behavior","block","inline","height","cursor","AddMock","forwardRef","props","ref","handleClickToggle","eventKey","paddingLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,yBAAP;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,iBAAnD;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAFwB,CAIxB;;AACA,QAAMU,UAAU,GAAGT,MAAM,CAAC,IAAD,CAAzB;;AAEA,QAAMU,eAAe,GAAG,MAAM;AAC5BF,IAAAA,YAAY,CAAC,GAAD,CAAZ,CAD4B,CACT;;AACnBC,IAAAA,UAAU,CAACE,OAAX,CAAmBC,cAAnB,CAAkC;AAChCC,MAAAA,QAAQ,EAAE,QADsB;AAEhCC,MAAAA,KAAK,EAAE,KAFyB;AAGhCC,MAAAA,MAAM,EAAE;AAHwB,KAAlC,EAF4B,CAMxB;AACL,GAPD;;AASA,sBACE;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,SAAS,EAAER,SADb;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,GAAG,EAAEC;AAHP;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eASE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,8BAAf;AAAA,qCACE;AAAI,gBAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACE;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,yCACE;AAAO,oBAAA,SAAS,EAAC,OAAjB;AAAA,4CACE;AAAA,6CACE;AAAA,gDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADF,eAOE;AAAA,6CACE;AAAA,gDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAA,iDACE,QAAC,IAAD;AACE,4BAAA,IAAI,EAAC,QADP;AAEE,4BAAA,IAAI,EAAC,MAFP;AAGE,4BAAA,KAAK,EAAE;AAAEC,8BAAAA,MAAM,EAAE;AAAV,6BAHT;AAIE,4BAAA,OAAO,EAAE,MAAMP,eAAe,CAAC,GAAD;AAJhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gCAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CAlED,C,CAoEA;;;GApEMJ,W;;KAAAA,W;AAqEN,MAAMY,OAAO,gBAAGpB,KAAK,CAACqB,UAAN,OAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC/C;AACA,WAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,QAAIA,QAAQ,KAAKH,KAAK,CAACb,SAAvB,EAAkC;AAChCa,MAAAA,KAAK,CAACZ,YAAN,CAAmB,EAAnB;AACD,KAFD,MAEO;AACLY,MAAAA,KAAK,CAACZ,YAAN,CAAmBe,QAAnB;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAEF,GAA1B;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA,WAAW,EAAE;AAAf,OAAlB;AAA2C,MAAA,SAAS,EAAEJ,KAAK,CAACb,SAA5D;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,SAAD,CAAW,MAAX;AACE,YAAA,EAAE,EAAEH,MADN;AAEE,YAAA,OAAO,EAAC,MAFV;AAGE,YAAA,QAAQ,EAAC,GAHX;AAIE,YAAA,OAAO,EAAE,MAAMkB,iBAAiB,CAAC,GAAD,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,SAAD,CAAW,QAAX;AAAoB,UAAA,QAAQ,EAAC,GAA7B;AAAA,iCACE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAnCe,CAAhB;MAAMJ,O;AAqCN,eAAeZ,WAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./styles/expandCard.css\";\nimport { Container, Card, Accordion, Button } from \"react-bootstrap\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst MainContent = () => {\n  // would basically hold the active eventKey to control the active/expanded Accordion\n  const [activeKey, setActiveKey] = useState(\"\");\n\n  // we are going to need a ref to the Accordion element to get its position/use the scrollIntoView function\n  const accordElem = useRef(null);\n\n  const handleClickEdit = () => {\n    setActiveKey(\"0\"); // \"0\" here is as defined in your Accordion.Collapse eventKey\n    accordElem.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\",\n      inline: \"nearest\",\n    }); // initiate scroll to the \"AddMock\" Accordion component\n  };\n\n  return (\n    <div>\n      <AddMock\n        activeKey={activeKey}\n        setActiveKey={setActiveKey}\n        ref={accordElem}\n      />\n\n      <div style={{ height: \"2000px\" }}>scroll down to see table</div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card\">\n              <div className=\"card-header card-header-info\">\n                <h4 className=\"card-title \">MOCK</h4>\n              </div>\n              <div className=\"card-body\">\n                <form>\n                  <div className=\"table-responsive\">\n                    <table className=\"table\">\n                      <thead>\n                        <tr>\n                          <th>Some Header</th>\n                          <th>Header 2</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>Click the Pencil Icon</td>\n                          <td>\n                            <Icon\n                              name=\"pencil\"\n                              size=\"huge\"\n                              style={{ cursor: \"pointer\" }}\n                              onClick={() => handleClickEdit(\"0\")}\n                            />\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// here, ref forwarding is needed to assign a ref to a `div` DOM element\nconst AddMock = React.forwardRef((props, ref) => {\n  // optional re-toggling of expanded accordion\n  function handleClickToggle(eventKey) {\n    if (eventKey === props.activeKey) {\n      props.setActiveKey(\"\");\n    } else {\n      props.setActiveKey(eventKey);\n    }\n  }\n\n  return (\n    <div className=\"row\" ref={ref}>\n      <Accordion style={{ paddingLeft: \"32px\" }} activeKey={props.activeKey}>\n        <Card className=\"collapseStyle\">\n          <Card.Header>\n            <Accordion.Toggle\n              as={Button}\n              variant=\"link\"\n              eventKey=\"0\"\n              onClick={() => handleClickToggle(\"0\")}\n            >\n              Add Mock\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <Container className=\"mockbody\">\n                Some Content. Lorem Ipsum. Hello World.\n              </Container>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </div>\n  );\n});\n\nexport default MainContent;\n"]},"metadata":{},"sourceType":"module"}